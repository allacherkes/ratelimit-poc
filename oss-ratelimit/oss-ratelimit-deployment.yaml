apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    gloo: oss-rate-limit
  name: oss-rate-limit
  namespace: gloo-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      gloo: oss-rate-limit
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2022-05-10T09:58:49+03:00"
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        gloo: oss-rate-limit
    spec:
      containers:
      - command:
        - /bin/ratelimit
        env:
        - name: GRPC_PORT
          value: "18081"
        - name: USE_STATSD
          value: "false"
        - name: REDIS_URL
          value: redis:6379
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_AUTH
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: redis
        - name: LOG_LEVEL
          value: debug
        - name: RUNTIME_ROOT
          value: /data
        - name: RUNTIME_SUBDIRECTORY
          value: ratelimit
        - name: RUNTIME_WATCH_ROOT
          value: "false"
        - name: RUNTIME_IGNOREDOTFILES
          value: "true"
        image: envoyproxy/ratelimit:5b6e65da
        imagePullPolicy: IfNotPresent
        name: oss-rate-limit
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthcheck
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/ratelimit/config
          name: oss-rate-limit-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 10101
      serviceAccount: oss-rate-limit
      serviceAccountName: oss-rate-limit
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: oss-rate-limit-config
        name: oss-rate-limit-config
